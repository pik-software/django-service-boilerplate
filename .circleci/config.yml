# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: quay.io/pik-software/base:v1.6

      - image: mdillon/postgis:9.6
        environment:
          POSTGRES_DB: repo
          POSTGRES_USER: root

      - image: redis:3.2

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - type: cache-restore
        key: pik-python-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install --upgrade setuptools
            pip install --exists-action w -r requirements.txt

      - type: cache-save
        key: pik-python-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt" }}
        paths:
          - "~/.cache/pip"

      - run:
          name: run tests
          command: |
            echo -e "SECRET_KEY = 'not so sectret!'\n" > ./_project_/settings_local.py
            . .venv/bin/activate
            sleep 1
            python manage.py migrate
            python manage.py collectstatic
            python manage.py check
            pytest --doctest-modules --cov-config .coveragerc --cov-report term-missing --selenium --durations=0 --cov . -vvv
            prospector --profile-path . --profile .prospector.yaml .

  deploy-staging:
    docker:
      - image: quay.io/pik-software/base:v1.6
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: deploy staging
          command: |
            if [[ "${CIRCLE_BRANCH}" == "meteozon-deploy-1" || "${CIRCLE_BRANCH}" == "master" ]]; then
              echo 'staging.pik-software.ru ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBOY5bwhxoqupBaChSCncDXgY+EPJC5DbZzfBJyrGh9etF+L8+4TJJUtzyCHUj0HcOUY186WHa3alIsAf5/KWbW0=' >> ~/.ssh/known_hosts
              ./.circleci/deploy-to-dokku.sh staging.pik-software.ru ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_BRANCH}
            fi

  deploy:
    docker:
      - image: quay.io/pik-software/base:v1.6
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: deploy master
          command: |
            echo 'django-service-boilerplate.pik-software.ru ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFPXodJ4VrKP3YKaotYDle6krEX2M1qORWpEXm2yqLA5spRrIG7VEw7mvFzqWD9xfTaQr1l2uIuxXp6DFMZY4hc=' >> ~/.ssh/known_hosts
            ./.circleci/deploy-to-prod.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
      - deploy:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
